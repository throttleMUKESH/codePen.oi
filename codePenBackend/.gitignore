# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components/

# Compiled source
dist/
build/
out/
coverage/

# TypeScript
*.tsbuildinfo
tsconfig.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Parcel cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build output
.nuxt
dist

# Vue.js build output
dist/
*.local

# Storybook build outputs
out/
.storybook-out
.storybook-static

# Django stuff:
*.log
*.pot
*.pyc
__pycache__/
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Fastlane
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
*/fastlane/report.xml
*/fastlane/Preview.html
*/fastlane/screenshots

# Dependency directories
node_modules/
jspm_packages/

# Snowpack build directory
web_modules/

# Compiled files
*.dll
*.exe
*.so
*.dylib

# IDE files
.idea/
.vscode/
.vscode/*
*.swp
*~
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace

# Other files
.DS_Store
Thumbs.db

# dotenv environment variable files
.env

# Ignore package-lock.json (if you use npm)
package-lock.json

# Ignore yarn.lock (if you use Yarn)
yarn.lock

# Ignore log files
*.log
logs/
log/
